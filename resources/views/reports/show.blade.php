@extends('layouts.admin')

@section('content')
<!-- Breadcrumbs  -->
<nav aria-label="breadcrumb" class="mb-2">
    <ol class="breadcrumb small">
        <li class="breadcrumb-item"><a href="{{ route('dashboard') }}">Home</a></li>
        <li class="breadcrumb-item"><a href="{{ route('reports.index') }}">Report</a></li>
        <li class="breadcrumb-item active" aria-current="page">View</li>
    </ol>
</nav>
<div class="container-fluid" id="reportPage" style="font-family:'Inter', 'Nunito', Arial, sans-serif;">
    <div class="d-flex justify-content-between align-items-center mb-3" style="flex-wrap:nowrap;">
        <div>
            <h5 class="text-muted">Report Date: {{ $report->start_date }} to {{ $report->end_date }}</h5>
            <p class="mb-0 text-muted">Generated by: {{ $report->user->name ?? 'Unknown' }}</p>
        </div>
        <div>
            <a href="#" id="downloadReport" style="background:linear-gradient(90deg,#4361ee,#5f6fff);color:white;padding:8px 18px;border:none;border-radius:8px;text-decoration:none;font-weight:600;box-shadow:0 1px 8px 0 #4361ee70;">Download</a>
        </div>
    </div>

    <div class="row" style="margin-bottom:10px;">
        <!-- Total Vehicles -->
        <div class="col-4 mb-2">
            <div class="card modern-card border-left-info shadow h-100 py-2">
                <div class="card-body d-flex align-items-center" style="min-height:90px;">
                    <div class="flex-grow-1">
                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">Total vehicles</div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">{{ $report->total_vehicles_range }}</div>
                    </div>
                    <div class="ms-2">
                        <i class="fas fa-car fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
        <!-- Log Updates Count -->
        <div class="col-4 mb-2">
            <div class="card modern-card border-left-warning shadow h-100 py-2">
                <div class="card-body d-flex align-items-center" style="min-height:90px;">
                    <div class="flex-grow-1">
                        <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">Log Changes made</div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">{{ $logCount }}</div>
                    </div>
                    <div class="ms-2">
                        <i class="fas fa-edit fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
        <!-- Flagged Vehicles -->
        <div class="col-4 mb-2">
            <div class="card modern-card border-left-danger shadow h-100 py-2">
                <div class="card-body d-flex align-items-center" style="min-height:90px;">
                    <div class="flex-grow-1">
                        <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">Number of Flagged Vehicle</div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">{{ $report->flagged_vehicles_range }}</div>
                    </div>
                    <div class="ms-2">
                        <i class="fas fa-flag fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row" style="margin-bottom:10px;">
        <!-- Bar Chart -->
        <div class="col-6">
            <div class="card modern-card shadow">
                <div class="card-header py-2">Entry vs Exit (Bar Chart)</div>
                <div class="card-body p-2" style="height: 400px;">
                    <canvas id="reportBarChart" width="420" height="390"></canvas>
                </div>
            </div>
        </div>
        <!-- Pie/Donut Chart -->
        <div class="col-6">
            <div class="card modern-card shadow h-100">
                <div class="card-header py-2">Flagged vs Non-Flagged Vehicles (Donut Chart)</div>
                <div class="card-body p-2 pie-card-body" style="height: 400px;">
                    @if(array_sum($pieChartData['data']) > 0)
                        <div style="position: relative; width: 270px; height: 270px; margin:0 auto;">
                            <canvas id="reportPieChart" width="270" height="270"></canvas>
                        </div>
                    @else
                        <p class="text-center text-muted mt-5">No vehicle data available in the selected range.</p>
                    @endif
                </div>
            </div>
        </div>
    </div>

    <!-- Area Chart -->
    <div class="row" style="margin-bottom:10px;">
        <div class="col-12">
            <div class="card modern-card shadow">
                <div class="card-header py-2">Vehicle Trend</div>
                <div class="card-body p-2" style="height: 300px;">
                    <canvas id="reportAreaChart" width="900" height="300"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@push('styles')
<style>
/* ...keep your styles unchanged... */
</style>
@endpush

@push('scripts')
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
<script>
    // --- Bar Chart: Entry vs Exit ---
    const barCtx = document.getElementById('reportBarChart').getContext('2d');
    new Chart(barCtx, {
        type: 'bar',
        data: {
            labels: {!! json_encode($barChartData['labels']) !!},
            datasets: {!! json_encode($barChartData['datasets']) !!}
        },
        options: {
            responsive: false,
            maintainAspectRatio: false,
            plugins: {
                legend: { display: true, position: 'top', labels: { font: { size: 14, family: 'Inter' } } }
            },
            scales: {
                y: { beginAtZero: true, title: { display: true, text: 'Vehicles' }},
                x: { offset: false, title: { display: true, text: 'Hour' }}
            }
        }
    });

    // --- Donut Chart with Center Text ---
    @if(array_sum($pieChartData['data']) > 0)
    // Custom plugin for center text
    const donutCenterText = {
        id: 'centerText',
        afterDraw(chart) {
            const {ctx, chartArea: {width, height}} = chart;
            const data = chart.data.datasets[0].data;
            const total = data.reduce((a, b) => a + b, 0);
            const nonFlagged = data[0];
            const flagged = data[1];
            const percentNonFlagged = ((nonFlagged / total) * 100).toFixed(1);
            const percentFlagged = ((flagged / total) * 100).toFixed(1);

            ctx.save();
            ctx.font = 'bold 20px Inter, Arial, sans-serif';
            ctx.fillStyle = '#4B445A';
            ctx.textAlign = 'center';
            ctx.textBaseline = 'middle';
            ctx.fillText(`Flagged: ${percentFlagged}%`, width / 2, height / 2 - 16);
            ctx.fillText(`Non-Flagged: ${percentNonFlagged}%`, width / 2, height / 2 + 16);
            ctx.restore();
        }
    };

    const pieCtx = document.getElementById('reportPieChart').getContext('2d');
    new Chart(pieCtx, {
        type: 'doughnut',
        data: {
            labels: {!! json_encode($pieChartData['labels']) !!},
            datasets: [{
                data: {!! json_encode($pieChartData['data']) !!},
                backgroundColor: {!! json_encode($pieChartData['colors']) !!},
                borderWidth: 1
            }]
        },
        options: {
            responsive: false,
            maintainAspectRatio: false,
            cutout: '65%',
            plugins: {
                legend: {
                    display: true,
                    position: 'bottom',
                    labels: { font: { size: 15, family: 'Inter' } }
                },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            const total = context.dataset.data.reduce((a, b) => a + b, 0);
                            const value = context.raw;
                            const percentage = ((value / total) * 100).toFixed(1);
                            return `${context.label}: ${value} (${percentage}%)`;
                        }
                    }
                }
            }
        },
        plugins: [donutCenterText]
    });
    @endif

    // --- Area Chart (Entries & Exits, with gradient fill) ---
    const areaCtx = document.getElementById('reportAreaChart').getContext('2d');
    let entriesGradient = areaCtx.createLinearGradient(0, 0, 0, 260);
    entriesGradient.addColorStop(0, "rgba(99,102,241,0.23)");
    entriesGradient.addColorStop(1, "rgba(99,102,241,0.02)");

    let exitsGradient = areaCtx.createLinearGradient(0, 0, 0, 260);
    exitsGradient.addColorStop(0, "rgba(236,72,153,0.21)");
    exitsGradient.addColorStop(1, "rgba(236,72,153,0.01)");

    new Chart(areaCtx, {
        type: 'line',
        data: {
            labels: {!! json_encode($areaChartData['labels']) !!},
            datasets: [
                {
                    label: 'Entry',
                    data: {!! json_encode($areaChartData['datasets'][0]['data']) !!},
                    borderColor: '#4F8DFD',
                    backgroundColor: entriesGradient,
                    pointBackgroundColor: '#3969d9',
                    pointRadius: 4,
                    fill: true,
                    tension: 0.41,
                    borderWidth: 2
                },
                {
                    label: 'Exits',
                    data: {!! json_encode($areaChartData['datasets'][1]['data']) !!},
                    borderColor: '#f04b90',
                    backgroundColor: exitsGradient,
                    pointBackgroundColor: '#f04b90',
                    pointRadius: 4,
                    fill: true,
                    tension: 0.41,
                    borderWidth: 2
                }
            ]
        },
        options: {
            responsive: false,
            maintainAspectRatio: false,
            plugins: { legend: { display: true, position: 'top', labels: { font: { size: 15, family: 'Inter' } } } },
            scales: {
                y: { beginAtZero: true, title: { display: true, text: 'Vehicles' }},
                x: { offset: false, title: { display: true, text: 'Hour' }}
            }
        }
    });

    // --- Download as PDF with html2pdf ---
    document.getElementById('downloadReport').addEventListener('click', function(e) {
        e.preventDefault();
        const element = document.getElementById('reportPage');
        const opt = {
            margin: 0,
            filename: 'Report.pdf',
            image: { type: 'jpeg', quality: 0.98 },
            html2canvas:  { scale: 2, useCORS: true, width: 794, height: 1123 },
            jsPDF: { unit: 'px', format: [794, 1123], orientation: 'portrait' }
        };
        html2pdf().set(opt).from(element).save();
    });
</script>
@endpush
